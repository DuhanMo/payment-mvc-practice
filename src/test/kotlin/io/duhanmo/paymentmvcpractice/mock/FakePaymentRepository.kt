package io.duhanmo.paymentmvcpractice.mock

import io.duhanmo.paymentmvcpractice.core.payment.model.Payment
import io.duhanmo.paymentmvcpractice.core.payment.port.PaymentRepository

class FakePaymentRepository : PaymentRepository {
    private var autoGeneratedId: Long = 0
    private val data: MutableList<Payment> = mutableListOf()

    override fun save(payment: Payment): Payment {
        if (payment.id == 0L) {
            val newPayment =
                Payment(
                    id = ++autoGeneratedId,
                    orderId = payment.orderId,
                    paymentKey = payment.paymentKey,
                    money = payment.money,
                    currency = payment.currency,
                    status = payment.status,
                    createdAt = payment.createdAt,
                    canceledAt = payment.canceledAt,
                )
            data.add(newPayment)
            return newPayment
        } else {
            data.removeIf { it.id == payment.id }
            data.add(payment)
            return payment
        }
    }

    override fun existsByPaymentKey(paymentKey: String): Boolean = data.find { it.paymentKey == paymentKey } != null
}
